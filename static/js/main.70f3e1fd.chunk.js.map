{"version":3,"sources":["config/graphProblems/graphProblems.js","config/graphProblems/dfs.js","config/graphProblems/bfs.js","config/graphProblems/kraskal.js","config/firebase.js","components/header/Header.js","components/signup/SignUp.js","components/login/Login.js","firebase/firebase.js","firebase/AttemptDataService.js","components/theory/Theory.js","components/test/Test.js","components/problemsList/ProblemsList.js","App.js","reportWebVitals.js","index.js"],"names":["graphProblems","name","theory","paragraphs","split","map","index","graphAnimationExample","graph","nodes","id","label","edges","from","to","animationPath","graphQuestion","correctPaths","font","size","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","isSignedIn","user","providerId","className","onClick","firebase","auth","signOut","SignUp","props","state","email","password","event","this","setState","currentTarget","value","preventDefault","length","createUserWithEmailAndPassword","catch","error","code","errorMessage","message","toast","onSubmit","e","signUp","htmlFor","type","style","border","fontSize","borderBottom","placeholder","onChange","handleEmailChange","required","handlePasswordChange","background","googleAuthProvider","GoogleAuthProvider","signInWithPopup","Component","Login","signInWithEmailAndPassword","login","initializeApp","db","database","ref","attempt","push","key","child","update","remove","Theory","timer","ms","Promise","res","setTimeout","problemConfig","find","config","match","params","network","a","edgeId","selectEdges","runGraphAnimationExample","paragraph","options","graphOptions","getNetwork","layout","hierarchical","color","physics","width","interaction","dragNodes","dragView","zoomView","height","Test","currentPath","possibleCorrectPaths","alreadyFailed","alreadyPassed","result","data","userId","currentUser","uid","userEmail","problem","date","Date","toGMTString","AttemptDataService","create","console","log","events","selectEdge","info","selectedEdge","i","filter","possibleCorrectPath","autoClose","submitAttempt","some","success","ProblemsList","App","exact","path","component","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"uQAIaA,EAAgB,CCJV,CACfC,KAAM,uDACNC,OAAQ,CACJC,WAAY,CACV,47EAGA,gVACA,kaACA,q5CAEA,wIACA,WAAWC,MAAM,YAAYC,KAAI,SAACF,EAAYG,GAAb,OAAuB,qCAAa,IAAVA,GAAe,yCAAlB,IAAoCH,QAC5F,mBACA,mBACA,iCACA,wBACA,qBACA,kBAAkBC,MAAM,mBAAmBC,KAAI,SAACF,EAAYG,GAAb,OAAuB,qCAAa,IAAVA,GAAe,gDAAlB,IAA2CH,QACjH,2BACA,mBACA,iBACA,YACA,oBACA,iBAAiBC,MAAM,kBAAkBC,KAAI,SAACF,EAAYG,GAAb,OAAuB,qCAAa,IAAVA,GAAe,+CAAlB,IAA0CH,QAC9G,4BACA,oBACA,iBACA,YACA,+UACA,8PACA,ggBACA,6YACA,0IAGFI,sBAAuB,CACnBC,MAAO,CACHC,MAAO,CACL,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAElBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BC,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGhDC,cAAe,CACXR,MAAO,CACHC,MAAO,CACL,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAElBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BG,aAAc,CACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,OCrFd,CACfhB,KAAM,uDACNC,OAAQ,CACNC,WAAY,CACV,g8DAIA,2QACA,WAAWC,MAAM,YAAYC,KAAI,SAACF,EAAYG,GAAb,OAAuB,qCAAa,IAAVA,GAAe,yCAAlB,IAAoCH,QAC5F,4BACA,iCACA,cACA,mBACA,sFACA,iGACA,2CACA,wBACA,6LACA,+LACA,yBACA,eACA,oBACA,qLACA,0BACFI,sBAAuB,CACnBC,MAAO,CACHC,MAAO,CACH,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAEpBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BC,cAAe,CAAC,GAAI,GAAI,GAAI,MAGlCC,cAAe,CACXR,MAAO,CACHC,MAAO,CACL,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAElBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BG,aAAc,CACZ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OClFZ,CACnBhB,KAAM,qGACNC,OAAQ,CACJC,WAAY,CACR,shCAEA,gBAAgBC,MAAM,iBAAiBC,KAAI,SAACF,EAAYG,GAAb,OAAuB,qCAAa,IAAVA,GAAe,8CAAlB,IAAyCH,QAC3G,YACA,4KACA,oOACA,0BACA,cACA,u4FAIFI,sBAAuB,CACnBC,MAAO,CACHC,MAAO,CACH,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAEpBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,EAAGH,MAAO,IAAKO,KAAM,CAACC,KAAM,KACnD,CAAET,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BC,cAAe,CAAC,GAAI,GAAI,GAAI,MAGlCC,cAAe,CACXR,MAAO,CACHC,MAAO,CACL,CAAEC,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,KAChB,CAAED,GAAI,EAAGC,MAAO,MAElBC,MAAO,CACL,CAAEF,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,GACvB,CAAEJ,GAAI,GAAIG,KAAM,EAAGC,GAAI,KAG7BG,aAAc,CACZ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QCxE1BG,EAAiB,CAC5BC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,mDACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,6CCiDMC,EA1CO,WACpB,OACM,cAAC,IAAD,UACG,YAAuC,IAApCC,EAAmC,EAAnCA,WAAmC,EAAvBC,KAAuB,EAAjBC,WACpB,OACI,sBAAKC,UAAU,gDAAf,UACE,mBAAGA,UAAU,eAAb,8IAGA,sBAAKA,UAAU,qBAAf,WACIH,GAAc,qCAChB,oBAAIG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMlB,GAAG,WAAWkB,UAAU,WAA9B,kFAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMlB,GAAG,SAASkB,UAAU,WAA5B,2CAKDH,GAAc,qCACf,oBAAIG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMlB,GAAG,YAAYkB,UAAU,WAA/B,iHAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,QAAS,kBAAMC,IAASC,OAAOC,WAAYJ,UAAU,WAA3D,2D,gCCsDPK,E,kDAnFb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,IAJY,E,qDAQ1B,SAAkBC,GAChBC,KAAKC,SAAS,CAACJ,MAAOE,EAAMG,cAAcC,U,kCAG5C,SAAqBJ,GACnBC,KAAKC,SAAS,CAACH,SAAUC,EAAMG,cAAcC,U,oBAG/C,SAAOJ,GACLA,EAAMK,iBACFJ,KAAKJ,MAAMC,MAAMQ,QAAU,GAAKL,KAAKJ,MAAME,SAASO,QAAU,GAChEd,IAASC,OAAOc,+BAA+BN,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UACzES,OAAM,SAACC,GACYA,EAAMC,KAAtB,IACIC,EAAeF,EAAMG,QACzBC,IAAMJ,MAAME,Q,oBAKtB,WAAU,IAAD,OACP,OACE,qBAAKrB,UAAU,wCAAf,SACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,+CAAf,SACE,uBAAMA,UAAU,oDAAoDwB,SAAU,SAACC,GAC7E,EAAKC,OAAOD,IADd,UAGE,oBAAIzB,UAAU,iBAAd,gFAEA,uBAAOA,UAAU,UAAU2B,QAAQ,aAAnC,4CACA,uBACEC,KAAK,QACLlD,GAAG,aACHsB,UAAU,8BACV6B,MAAO,CAACC,OAAQ,OAAQC,SAAU,OAAQC,aAAc,kBACxDC,YAAY,QACZC,SAAU,SAACT,GACT,EAAKU,kBAAkBV,IAEzBW,UAAQ,IAEV,uBAAOpC,UAAU,UAAU2B,QAAQ,gBAAnC,kDACA,uBACEC,KAAK,WACLlD,GAAG,gBACHsB,UAAU,yBACV6B,MAAO,CAACC,OAAQ,OAAQC,SAAU,OAAQC,aAAc,kBACxDC,YAAY,WACZC,SAAU,SAACT,GACT,EAAKY,qBAAqBZ,IAE5BW,UAAQ,IAEV,wBAAQpC,UAAU,6CACV6B,MAAO,CAACE,SAAU,OAAQO,WAAY,WACtCV,KAAK,SAFb,0HAME,wBAAQ5B,UAAU,wCAChBC,QAAS,WACP,IAAMsC,EAAqB,IAAIrC,IAASC,KAAKqC,mBAC7CtC,IAASC,OAAOsC,gBAAgBF,IAHpC,gM,GAtEKG,aCoFNC,E,kDAlFb,WAAYrC,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,IAJY,E,qDAQ1B,SAAkBC,GAChBC,KAAKC,SAAS,CAACJ,MAAOE,EAAMG,cAAcC,U,kCAG5C,SAAqBJ,GACnBC,KAAKC,SAAS,CAACH,SAAUC,EAAMG,cAAcC,U,mBAG/C,SAAMJ,GACJA,EAAMK,iBACFJ,KAAKJ,MAAMC,MAAMQ,QAAU,GAAKL,KAAKJ,MAAME,SAASO,QAAU,GAChEd,IAASC,OAAOyC,2BAA2BjC,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UACrES,OAAM,SAACC,GACUA,EAAMC,KAAtB,IACIC,EAAeF,EAAMG,QACzBC,IAAMJ,MAAME,Q,oBAKpB,WAAU,IAAD,OACP,OACE,qBAAKrB,UAAU,wCAAf,SACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,+CAAf,SACE,uBAAMA,UAAU,oDAAoDwB,SAAU,SAACC,GAC7E,EAAKoB,MAAMpB,IADb,UAGE,oBAAIzB,UAAU,iBAAd,gFAEA,uBAAOA,UAAU,UAAU2B,QAAQ,aAAnC,4CACA,uBACEC,KAAK,QACLlD,GAAG,aACHsB,UAAU,8BACV6B,MAAO,CAACC,OAAQ,OAAQC,SAAU,OAAQC,aAAc,kBACxDC,YAAY,QACZC,SAAU,SAACT,GACT,EAAKU,kBAAkBV,IAEzBW,UAAQ,IAEV,uBAAOpC,UAAU,UAAU2B,QAAQ,gBAAnC,kDACA,uBACEC,KAAK,WACLlD,GAAG,gBACHsB,UAAU,yBACV6B,MAAO,CAACC,OAAQ,OAAQC,SAAU,OAAQC,aAAc,kBACxDC,YAAY,WACZC,SAAU,SAACT,GACT,EAAKY,qBAAqBZ,IAE5BW,UAAQ,IAEV,wBAAQpC,UAAU,6CACV6B,MAAO,CAACE,SAAU,OAAQO,WAAY,WACtCV,KAAK,SAFb,4CAKE,wBAAQ5B,UAAU,wCAChBC,QAAS,WACP,IAAMsC,EAAqB,IAAIrC,IAASC,KAAKqC,mBAC7CtC,IAASC,OAAOsC,gBAAgBF,IAHpC,kH,GArEIG,a,mECRpBxC,IAAS4C,cAAc1D,GAERc,ICJT6C,EDIS7C,IAAS8C,WCJJC,IAAI,aAwBT,M,sFArBb,WACE,OAAOF,I,oBAGT,SAAOG,GACL,OAAOH,EAAGI,KAAKD,K,oBAGjB,SAAOE,EAAKtC,GACV,OAAOiC,EAAGM,MAAMD,GAAKE,OAAOxC,K,oBAG9B,SAAOsC,GACL,OAAOL,EAAGM,MAAMD,GAAKG,W,uBAGvB,WACE,OAAOR,EAAGQ,a,MChBOC,E,kDACnB,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAaRmD,MAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,OAZ/C,EAAKI,cAAgB9F,EAAc+F,MAAK,SAAAC,GAAM,OAAIA,EAAO/F,MAAQqC,EAAM2D,MAAMC,OAAOjG,QAFnE,E,mGAKnB,WAA+BkG,GAA/B,mBAAAC,EAAA,oEACuBzD,KAAKmD,cAAc5F,OAAOK,sBAAsBQ,eADvE,gEACasF,EADb,QAEMF,EAAQG,YAAY,CAACD,IAF3B,SAGY1D,KAAK8C,MAAM,KAHvB,+JAKQ9C,KAAK8C,MAAM,KALnB,QAME9C,KAAK4D,yBAAyBJ,GANhC,gE,2EAWA,WAAU,IAAD,OACP,OACI,gCACI,+BAAKxD,KAAKmD,cAAc7F,KAAxB,2CACA,8BACG0C,KAAKmD,cAAc5F,OAAOC,WAAWE,KAAI,SAAAmG,GAAS,OACjD,4BACGA,SAIP,cAAC,IAAD,CAAM1F,GAAE,oBAAe6B,KAAKmD,cAAc7F,KAAlC,SAA+C+B,UAAU,oBAAjE,2EAGA,cAAC,IAAD,CACEyE,QAASC,EACTlG,MAAOmC,KAAKmD,cAAc5F,OAAOK,sBAAsBC,MACvDmG,WAAY,SAACR,GACX,EAAKI,yBAAyBJ,a,GAnCVzB,aA2C9BgC,EAAe,CACnBE,OAAQ,CACNC,cAAc,GAEhBjG,MAAO,CACLkG,MAAO,UACPC,SAAS,EACTC,MAAO,GAETvG,MAAO,CACLS,KAAM,CAACC,KAAM,KAEf8F,YAAa,CACXC,WAAW,EACXC,UAAU,EACVC,UAAU,GAEZC,OAAQ,S,SCzDWC,E,kDACnB,WAAYhF,GAAQ,IAAD,8BACjB,cAAMA,IACDwD,cAAgB9F,EAAc+F,MAAK,SAAAC,GAAM,OAAIA,EAAO/F,MAAQqC,EAAM2D,MAAMC,OAAOjG,QACpF,EAAKsC,MAAQ,CACXgF,YAAa,GACbC,qBAAsB,EAAK1B,cAAc9E,cAAcC,aACvDwG,eAAe,EACfC,eAAe,GAPA,E,iDAWnB,SAAcC,GACZ,IAAIC,EAAO,CACTC,OAAQ3F,IAASC,OAAO2F,YAAYC,IACpCC,UAAW9F,IAASC,OAAO2F,YAAYtF,MACvCyF,QAAStF,KAAKmD,cAAc7F,KAC5B0H,OAAQA,EACRO,MAAM,IAAIC,MAAOC,eAGnBC,EAAmBC,OAAOV,GACvB1E,OAAM,SAACO,GACN8E,QAAQC,IAAI/E,GACZF,IAAMJ,MAAM,2PAAqDM,EAAEH,c,oBAIzE,WAAU,IAAD,OACP,OACI,gCACI,+BAAKX,KAAKmD,cAAc7F,KAAxB,+BACA,o2BACA,cAAC,IAAD,CAAMa,GAAE,oBAAe6B,KAAKmD,cAAc7F,KAAlC,WAAiD+B,UAAU,oBAAnE,oGAGA,cAAC,IAAD,CACEyE,QAASC,EACTlG,MAAOmC,KAAKmD,cAAc9E,cAAcR,MACxCiI,OAAQ,CACNC,WAAY,SAAChG,GACX,GAAI,EAAKH,MAAMkF,cACblE,IAAMoF,KAAK,sGAGb,GAAI,EAAKpG,MAAMmF,cACbnE,IAAMoF,KAAK,gGAGb,GAA2B,IAAvBjG,EAAMjC,MAAMuC,OAIhB,GAAIN,EAAM9B,MAAMoC,OAAS,EACvBO,IAAMJ,MAAM,oOADd,CAIA,IAAMyF,EAAelG,EAAM9B,MAAM,GACjC,GAAIgI,GAAgB,EAAKrG,MAAMgF,YAAY,EAAKhF,MAAMgF,YAAYvE,OAAS,GAA3E,CAGA,EAAKJ,SAAS,CAAC2E,YAAY,GAAD,mBAAM,EAAKhF,MAAMgF,aAAjB,CAA8BqB,MAExDL,QAAQC,IAAI,EAAKjG,OACjB,IAxBqB,eAwBZsG,GAEP,EAAKjG,SAAS,CAAC4E,qBAAsB,EAAKjF,MAAMiF,qBAC3CsB,QAAO,SAACC,GAAD,OAAyBA,EAAoBF,KAAO,EAAKtG,MAAMgF,YAAYsB,SAHhFA,EAAI,EAAGA,EAAI,EAAKtG,MAAMgF,YAAYvE,OAAQ6F,IAAM,EAAhDA,GAMT,OAA8C,GAA1C,EAAKtG,MAAMiF,qBAAqBxE,QAClCO,IAAMJ,MAAM,oFAAoB,CAAE6F,WAAW,IAC7C,EAAKpG,SAAS,CAAC6E,eAAe,SAC9B,EAAKwB,cAAc,YAGjB,EAAK1G,MAAMiF,qBAAqB0B,MAAK,SAACH,GAAD,OAAyBA,EAAoB/F,SAAW,EAAKT,MAAMgF,YAAYvE,WACtHO,IAAM4F,QAAQ,qDAAc,CAAEH,WAAW,IACzC,EAAKpG,SAAS,CAAC8E,eAAe,SAC9B,EAAKuB,cAAc,iBAHrB,QA1BE1F,IAAMoF,KAAK,gS,GAlDGjE,aA0F5BgC,EAAe,CACnBE,OAAQ,CACNC,cAAc,GAEhBjG,MAAO,CACLkG,MAAO,UACPC,SAAS,EACTC,MAAO,GAETvG,MAAO,CACLS,KAAM,CAACC,KAAM,KAEf8F,YAAa,CACXC,WAAW,EACXC,UAAU,EACVC,UAAU,GAEZC,OAAQ,SChHW+B,E,4JAEnB,WACE,OACI,sBAAKpH,UAAU,6CAAf,UACI,qBAAKA,UAAU,qBAAf,oLAGChC,GAAiBA,EAAcK,KAAI,SAACyF,GAAD,OAChC,qBAAK9D,UAAU,WAAf,SACA,cAAC,IAAD,CAAMlB,GAAE,oBAAegF,EAAc7F,KAA7B,WAA4C+B,UAAU,eAA9D,SACG8D,EAAc7F,mB,GAXSyE,aCmB7B2E,EAAM,WACjB,OACE,cAAC,IAAD,UACA,cAAC,IAAD,2BAA0BjI,GAA1B,IAA0Cc,SAAUA,IAApD,SACE,8BACE,cAAC,IAAD,UACG,YAAuC,IAApCL,EAAmC,EAAnCA,WAAmC,EAAvBC,KAAuB,EAAjBC,WACpB,OACA,gCACE,cAAC,EAAD,IACA,8BACE,qBAAKC,UAAU,iBAAf,SACE,eAAC,IAAD,WACGH,GAAc,qCACf,cAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,YAAYC,UAAWJ,IACzC,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,yBAAyBC,UAAWhE,IACtD,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,uBAAuBC,UAAWlC,IACpD,cAAC,IAAD,CAAUgC,OAAK,EAACzI,KAAK,IAAIC,GAAG,cAC5B,cAAC,IAAD,CAAUwI,OAAK,EAACzI,KAAK,SAASC,GAAG,kBAE/Be,GAAc,qCAChB,cAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,SAASC,UAAW7E,IACtC,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,WAAWC,UAAWnH,IACxC,cAAC,IAAD,CAAUiH,OAAK,EAACzI,KAAK,IAAIC,GAAG,WAC5B,cAAC,IAAD,CAAUwI,OAAK,EAACzI,KAAK,YAAYC,GAAG,qBAK1C,cAAC,IAAD,kBAUd2I,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAEzBN,QCpDAO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASC,eAAe,SAM1BC,M","file":"static/js/main.70f3e1fd.chunk.js","sourcesContent":["import { dfs } from './dfs'\r\nimport { bfs } from './bfs'\r\nimport { kraskal } from './kraskal'\r\n\r\nexport const graphProblems = [\r\n    dfs,\r\n    bfs,\r\n    kraskal\r\n];","export const dfs = {\r\n    name: \"Алгоритм DFS\",\r\n    theory: {\r\n        paragraphs: [\r\n          \"Алгоритм поиска в глубину DFS реализует стратегию обхода противоположную BFS. Сначала обнаруживаются вершины максимально  удаленные от начальной вершины s, а затем алгоритм постепенно возвращается к начальной.\\\r\n           Еще одной особенностью DFS является то, что если все вершины доступные из s уже исследованы, но при этом часть вершин осталась непосещенными, то DFS выбирает новую корневую вершины и продолжает обход.\\\r\n           В целях предотвращения повторных визитов вершин DFS использует два типа меток:\",\r\n          \"- время обнаружения d[v] – обновляется при первом посещении вершины;\",\r\n          \"- время окончания f[v] – обновляется, когда обход завершен для списка смежных вершин.\",\r\n          \"Алгоритм поиска в ширину реализуется рекурсивной процедурой DFS. Кроме точки входа алгоритм включает две вспомогательные процедуры.\\\r\n          Процедура DFS_Check осуществляет проверку того, что вершина ранее не была посещена. Подпроцедура DFS_Visit отвечает за сканирование  списка смежных вершин.\",\r\n          \"Общее время выполнения - O(n + m)\",\r\n          \"DFS(G,s)\".split(\"DFS(G,s)\").map((paragraphs, index) => <>{index !== 0 && <b>DFS(G,s)</b>} {paragraphs}</>),\r\n          \"1. d = [0,...,0]\",\r\n          \"2. f = [0,...,0]\",\r\n          \"3. π = [⊥,..,⊥]\",\r\n          \"4. foreach s ∈ V\",\r\n          \"5. DFS_Check(s, s)\",\r\n          \"DFS_Check(u, v)\".split(\"DFS_Check(u, v)\").map((paragraphs, index) => <>{index !== 0 && <b>DFS_Check(u, v)</b>} {paragraphs}</>),\r\n          \"1. if π[v] = ⊥\",\r\n          \"2. π[v] = u\",\r\n          \"3. d[v] = time\",\r\n          \"4. time++\",\r\n          \"5. DFS_Visit(u,v)\",\r\n          \"DFS_Visit(u,v)\".split(\"DFS_Visit(u,v)\").map((paragraphs, index) => <>{index !== 0 && <b>DFS_Visit(u,v)</b>} {paragraphs}</>),\r\n          \"1. foreach (v,w) ∈ E\",\r\n          \"2. DFS_Check(v,w)\",\r\n          \"3. f[v] = time\",\r\n          \"4. time++\",\r\n          \"Проведем анализ времени выполнения алгоритма поиска в глубину:\",\r\n          \"- инициализация переменных потребует O(n) операций.\",\r\n          \"- DFS_Visit вызывается в точности один раз для каждой вершины (у которых π[v] = ∞), откуда общее время выполнения O(n).\",\r\n          \"- DFS_Check вызывается один раз для исходящих граней, откуда общее время выполнения O(m).\",\r\n          \"Общее время выполнения - O(n + m).\"\r\n\r\n        ],\r\n        graphAnimationExample: {\r\n            graph: {\r\n                nodes: [\r\n                  { id: 1, label: \"1\" },\r\n                  { id: 2, label: \"2\" },\r\n                  { id: 3, label: \"3\" },\r\n                  { id: 4, label: \"4\" },\r\n                  { id: 5, label: \"5\" },\r\n                  { id: 6, label: \"6\" },\r\n                  { id: 7, label: \"7\" },\r\n                  { id: 8, label: \"8\" },\r\n                ],\r\n                edges: [\r\n                  { id: 12, from: 1, to: 2 },\r\n                  { id: 13, from: 1, to: 3 },\r\n                  { id: 15, from: 1, to: 5 },\r\n                  { id: 14, from: 1, to: 4 },\r\n                  { id: 26, from: 2, to: 6 },\r\n                  { id: 27, from: 2, to: 7 },\r\n                  { id: 38, from: 3, to: 8 }\r\n                ]\r\n            },\r\n            animationPath: [12, 26, 27, 13, 38, 14, 15]\r\n        },\r\n    },\r\n    graphQuestion: {\r\n        graph: {\r\n            nodes: [\r\n              { id: 1, label: \"1\" },\r\n              { id: 2, label: \"2\" },\r\n              { id: 3, label: \"3\" },\r\n              { id: 4, label: \"4\" },\r\n              { id: 5, label: \"5\" },\r\n              { id: 6, label: \"6\" },\r\n              { id: 7, label: \"7\" },\r\n            ],\r\n            edges: [\r\n              { id: 12, from: 1, to: 2 },\r\n              { id: 16, from: 1, to: 6 },\r\n              { id: 23, from: 2, to: 3 },\r\n              { id: 24, from: 2, to: 4 },\r\n              { id: 45, from: 4, to: 5 },\r\n              { id: 67, from: 6, to: 7 }\r\n            ]\r\n        },\r\n        correctPaths: [\r\n            [12, 23, 24, 45, 16, 67],\r\n            [16, 67, 12, 23, 24, 45],\r\n            [12, 24, 45, 23, 16, 17],\r\n            [16, 67, 12, 24, 45, 23]\r\n        ]\r\n    }\r\n}\r\n","export const bfs = {\r\n    name: \"Алгоритм BFS\",\r\n    theory: {\r\n      paragraphs: [\r\n        \"Алгоритм BFS предполагает исследование графа по слоям, т.е. вершина s определяет 0-й слой, \\\r\n      её непосредственные соседи 1-ый слой и тд. Выходными данными алгоритма являются: массив d, в котором содержится расстояние от вершины i до начальной s\\\r\n      (≡ номер слоя), и массив parent, в котором хранятся указатели на родительскую вершину из которой текущая была обнаружена впервые \\\r\n      (если существует грань (i,j), то parent[i] = j).\",\r\n        \"Результирующая производительность алгоритма BFS - O(m + n).\",\r\n        \"BFS(G,s)\".split(\"BFS(G,s)\").map((paragraphs, index) => <>{index !== 0 && <b>BFS(G,s)</b>} {paragraphs}</>),\r\n        \"1. d = [∞,..,∞]\",\r\n        \"2. parent = [⊥,..,⊥]\",\r\n        \"3. d[s] = 0\",\r\n        \"4. parent[s] = s\",\r\n        \"5. Q = {s}   // текущий слой\",\r\n        \"6. Q' = {}   //следующий слой\",\r\n        \"7. for l = 1 to ∞ while Q ≠ {}\",\r\n        \"8. foreach u ∈ Q\",\r\n        \"9. foreach(u,v) ∈ E //сканируем все исходящие грани\",\r\n        \"10. if parent[v] = ⊥ //была вершина обнаружена ранее?\",\r\n        \"11. Q' = Q' ∪ {v}\",\r\n        \"12. d[v] = l\",\r\n        \"13. parent[v] = u\",\r\n        \"14. (Q, Q') = (Q', {}) //переход на следующий уровень\",\r\n        \"15. return (d, parent)\"],\r\n      graphAnimationExample: {\r\n          graph: {\r\n              nodes: [\r\n                  { id: 1, label: \"1\" },\r\n                  { id: 2, label: \"2\" },\r\n                  { id: 3, label: \"3\" },\r\n                  { id: 4, label: \"4\" },\r\n                  { id: 5, label: \"5\" }\r\n                ],\r\n              edges: [\r\n                { id: 12, from: 1, to: 2 },\r\n                { id: 13, from: 1, to: 3 },\r\n                { id: 24, from: 2, to: 4 },\r\n                { id: 25, from: 2, to: 5 },\r\n                ]\r\n            },\r\n          animationPath: [12, 13, 24, 25]\r\n        },\r\n    },\r\n    graphQuestion: {\r\n        graph: {\r\n            nodes: [\r\n              { id: 1, label: \"1\" },\r\n              { id: 2, label: \"2\" },\r\n              { id: 3, label: \"3\" },\r\n              { id: 4, label: \"4\" },\r\n              { id: 5, label: \"5\" },\r\n              { id: 6, label: \"6\" },\r\n              { id: 7, label: \"7\" },\r\n              { id: 8, label: \"8\" }\r\n            ],\r\n            edges: [\r\n              { id: 12, from: 1, to: 2 },\r\n              { id: 13, from: 1, to: 3 },\r\n              { id: 24, from: 2, to: 4 },\r\n              { id: 25, from: 2, to: 5 },\r\n              { id: 36, from: 3, to: 6 },\r\n              { id: 68, from: 6, to: 8 },\r\n              { id: 57, from: 5, to: 7 }\r\n            ]\r\n        },\r\n        correctPaths: [\r\n          [13, 12, 24, 25, 36, 57, 68],\r\n          [13, 12, 24, 25, 36, 68, 57],\r\n          [13, 12, 25, 24, 36, 57, 68],\r\n          [13, 12, 25, 24, 36, 68, 57],\r\n          [13, 12, 36, 24, 25, 57, 68],\r\n          [13, 12, 36, 24, 25, 68, 57],\r\n          [13, 12, 36, 25, 24, 57, 68],\r\n          [13, 12, 36, 25, 24, 68, 57],\r\n          [12, 13, 24, 25, 36, 57, 68],\r\n          [12, 13, 24, 25, 36, 68, 57],\r\n          [12, 13, 25, 24, 36, 57, 68],\r\n          [12, 13, 25, 24, 36, 68, 57],\r\n          [12, 13, 36, 24, 25, 57, 68],\r\n          [12, 13, 36, 24, 25, 68, 57],\r\n          [12, 13, 36, 25, 24, 57, 68],\r\n          [12, 13, 36, 25, 24, 68, 57]\r\n        ]\r\n    }\r\n}","export const kraskal = {\r\n    name: \" Алгоритм Краскала\",\r\n    theory: {\r\n        paragraphs: [\r\n            \"Особенностью алгоритма Краскала является то, что в качестве представления графа может использовать последовательность граней. \\\r\n            Для разряженных графов (m = O(n)) этот метод является наиболее эффективным.\",\r\n            \"KruskalMST(G)\".split(\"KruskalMST(G)\").map((paragraphs, index) => <>{index !== 0 && <b>KruskalMST(G)</b>} {paragraphs}</>),\r\n            \"1. T = {}\",\r\n            \"2. foreach (u,v) ∈ E в порядке возрастания веса c\",\r\n            \"3. if вершины u,v принадлежат разным поддеревьям T\",\r\n            \"4. T = T ∪ {(u,v)}\",\r\n            \"5. return T\",\r\n            \"Концепция алгоритма описывается следующим образом. Пусть Т представляет собой лес MST, если грань (u,w) принадлежит тому же поддереву T'⊂ T, \\\r\n            то (согласно свойству цикла) она является самой весомой гранью некоторого цикла С ⊆ T' ∪ {(u,w)} и, следовательно, может быть проигнорирована алгоритмом.\\\r\n            Иначе (u,v) соединяет два MST дерева  T1 и T2. Грань (u,w) - самая легкая между двумя деревьями, иначе данное соединение было бы обнаружено ранее.\\\r\n            Согласно свойству сечения она добавляется в дерево MST. Время выполнения алгоритма составляет O(m log m), которое тратиться в большинстве своём на сортировку граней графа.\"],\r\n          graphAnimationExample: {\r\n              graph: {\r\n                  nodes: [\r\n                      { id: 1, label: \"1\" },\r\n                      { id: 2, label: \"2\" },\r\n                      { id: 3, label: \"3\" },\r\n                      { id: 4, label: \"4\" }\r\n                    ],\r\n                  edges: [\r\n                    { id: 12, from: 1, to: 2, label: \"1\", font: {size: 45} },\r\n                    { id: 23, from: 2, to: 3 },\r\n                    { id: 24, from: 2, to: 4 },\r\n                    { id: 34, from: 3, to: 4 }\r\n                    ]\r\n                },\r\n              animationPath: [12, 13, 14, 24]\r\n            },\r\n        },\r\n        graphQuestion: {\r\n            graph: {\r\n                nodes: [\r\n                  { id: 1, label: \"1\" },\r\n                  { id: 2, label: \"2\" },\r\n                  { id: 3, label: \"3\" },\r\n                  { id: 4, label: \"4\" },\r\n                  { id: 5, label: \"5\" },\r\n                  { id: 6, label: \"6\" },\r\n                  { id: 7, label: \"7\" },\r\n                  { id: 8, label: \"8\" }\r\n                ],\r\n                edges: [\r\n                  { id: 12, from: 1, to: 2 },\r\n                  { id: 13, from: 1, to: 3 },\r\n                  { id: 24, from: 2, to: 4 },\r\n                  { id: 25, from: 2, to: 5 },\r\n                  { id: 36, from: 3, to: 6 },\r\n                  { id: 68, from: 6, to: 8 },\r\n                  { id: 57, from: 5, to: 7 }\r\n                ]\r\n            },\r\n            correctPaths: [\r\n              [13, 12, 24, 25, 36, 57, 68],\r\n              [13, 12, 24, 25, 36, 68, 57],\r\n              [13, 12, 25, 24, 36, 57, 68],\r\n              [13, 12, 25, 24, 36, 68, 57],\r\n              [13, 12, 36, 24, 25, 57, 68],\r\n              [13, 12, 36, 24, 25, 68, 57],\r\n              [13, 12, 36, 25, 24, 57, 68],\r\n              [13, 12, 36, 25, 24, 68, 57],\r\n              [12, 13, 24, 25, 36, 57, 68],\r\n              [12, 13, 24, 25, 36, 68, 57],\r\n              [12, 13, 25, 24, 36, 57, 68],\r\n              [12, 13, 25, 24, 36, 68, 57],\r\n              [12, 13, 36, 24, 25, 57, 68],\r\n              [12, 13, 36, 24, 25, 68, 57],\r\n              [12, 13, 36, 25, 24, 57, 68],\r\n              [12, 13, 36, 25, 24, 68, 57]\r\n            ]\r\n    }\r\n}","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyDuxcEkgf_OaiUrNxdgnglnx69C_mzHZi0\",\r\n  authDomain: \"webapp-3ed23.firebaseapp.com\",\r\n  databaseURL: \"https://webapp-3ed23-default-rtdb.firebaseio.com\",\r\n  projectId: \"webapp-3ed23\",\r\n  storageBucket: \"webapp-3ed23.appspot.com\",\r\n  messagingSenderId: \"835037297481\",\r\n  appId: \"1:835037297481:web:7e45a05b992fc199897898\"\r\n};","import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            return (\r\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark px-5\">\r\n                  <a className=\"navbar-brand\">\r\n                    Алгоритмы теории графов\r\n                  </a>\r\n                  <div className=\"navbar-nav mr-auto\">\r\n                    {!isSignedIn && <>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/sign-up\" className=\"nav-link\">\r\n                        Регистрация \r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/login\" className=\"nav-link\">\r\n                        Вход\r\n                      </Link>\r\n                    </li>\r\n                    </>}\r\n                    {isSignedIn && <>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/problems\" className=\"nav-link\">\r\n                        Список алгоритмов\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link onClick={() => firebase.auth().signOut() } className=\"nav-link\">\r\n                        Выйти\r\n                      </Link>\r\n                    </li>\r\n                    </>}\r\n                  </div>\r\n                </nav>\r\n            );\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {Link, Redirect} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { toast } from 'react-toastify';\r\n\r\nclass SignUp extends Component {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleEmailChange(event: SyntheticEvent<HTMLInputElement>) {\r\n    this.setState({email: event.currentTarget.value});\r\n  }\r\n\r\n  handlePasswordChange(event: SyntheticEvent<HTMLInputElement>) {\r\n    this.setState({password: event.currentTarget.value});\r\n  }\r\n\r\n  signUp(event: SyntheticEvent<HTMLInputElement>) {\r\n    event.preventDefault();\r\n    if (this.state.email.length >= 5 && this.state.password.length >= 5) {\r\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            toast.error(errorMessage)\r\n          });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center container h-100 flex-grow\">\r\n        <div className=\"row align-items-center h-100 flex-grow\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-8 col-xs-10 mx-auto\">\r\n            <form className=\"d-flex flex-column align-items-center form-signin\" onSubmit={(e) => {\r\n              this.signUp(e)\r\n            }}>\r\n              <h1 className=\"pt-5 mt-5 pb-3\">Регистрация</h1>\r\n\r\n              <label className=\"sr-only\" htmlFor=\"inputEmail\">Почта</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"inputEmail\"\r\n                className=\"form-control mb-3 mt-3 pl-4\"\r\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\r\n                placeholder=\"Email\"\r\n                onChange={(e) => {\r\n                  this.handleEmailChange(e)\r\n                }}\r\n                required/>\r\n\r\n              <label className=\"sr-only\" htmlFor=\"inputPassword\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"inputPassword\"\r\n                className=\"form-control mb-4 pl-4\"\r\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => {\r\n                  this.handlePasswordChange(e)\r\n                }}\r\n                required/>\r\n\r\n              <button className=\"btn btn-dark border-0 mt-3 mb-3 w-100 py-1\"\r\n                      style={{fontSize: \"18px\", background: '#37AAE9'}}\r\n                      type=\"submit\">\r\n                Зарегистрироваться\r\n              </button>\r\n\r\n                <button className=\"btn btn-dark border-0 mb-3 w-100 py-1\"\r\n                  onClick={() => {\r\n                    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                    firebase.auth().signInWithPopup(googleAuthProvider);\r\n                  }}\r\n                >\r\n                  Зарегистрироваться с помощью Google\r\n                </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SignUp;","import {Link, Redirect} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Login extends Component {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleEmailChange(event: SyntheticEvent<HTMLInputElement>) {\r\n    this.setState({email: event.currentTarget.value});\r\n  }\r\n\r\n  handlePasswordChange(event: SyntheticEvent<HTMLInputElement>) {\r\n    this.setState({password: event.currentTarget.value});\r\n  }\r\n\r\n  login(event: SyntheticEvent<HTMLInputElement>) {\r\n    event.preventDefault();\r\n    if (this.state.email.length >= 5 && this.state.password.length >= 5) {\r\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .catch((error) => {\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          toast.error(errorMessage)\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center container h-100 flex-grow\">\r\n        <div className=\"row align-items-center h-100 flex-grow\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-8 col-xs-10 mx-auto\">\r\n            <form className=\"d-flex flex-column align-items-center form-signin\" onSubmit={(e) => {\r\n              this.login(e)\r\n            }}>\r\n              <h1 className=\"pt-5 mt-5 pb-3\">Авторизация</h1>\r\n\r\n              <label className=\"sr-only\" htmlFor=\"inputEmail\">Почта</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"inputEmail\"\r\n                className=\"form-control mb-3 mt-3 pl-4\"\r\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\r\n                placeholder=\"Email\"\r\n                onChange={(e) => {\r\n                  this.handleEmailChange(e)\r\n                }}\r\n                required/>\r\n\r\n              <label className=\"sr-only\" htmlFor=\"inputPassword\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"inputPassword\"\r\n                className=\"form-control mb-4 pl-4\"\r\n                style={{border: \"none\", fontSize: \"14px\", borderBottom: \"1px solid #eee\"}}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => {\r\n                  this.handlePasswordChange(e)\r\n                }}\r\n                required/>\r\n\r\n              <button className=\"btn btn-dark border-0 mt-3 mb-3 w-100 py-1\"\r\n                      style={{fontSize: \"18px\", background: '#37AAE9'}}\r\n                      type=\"submit\">\r\n                Войти</button>\r\n\r\n                <button className=\"btn btn-dark border-0 mb-3 w-100 py-1\"\r\n                  onClick={() => {\r\n                    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                    firebase.auth().signInWithPopup(googleAuthProvider);\r\n                  }}\r\n                >\r\n                  Войти с помощью Google\r\n                </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Login;","import firebase from \"firebase\";\r\nimport \"firebase/database\";\r\nimport { firebaseConfig } from \"../config/firebase\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.database();","import firebase from \"./firebase\";\r\n\r\nconst db = firebase.ref(\"/attempts\");\r\n\r\nclass AttemptDataService {\r\n  getAll() {\r\n    return db;\r\n  }\r\n\r\n  create(attempt) {\r\n    return db.push(attempt);\r\n  }\r\n\r\n  update(key, value) {\r\n    return db.child(key).update(value);\r\n  }\r\n\r\n  delete(key) {\r\n    return db.child(key).remove();\r\n  }\r\n\r\n  deleteAll() {\r\n    return db.remove();\r\n  }\r\n}\r\n\r\nexport default new AttemptDataService();","import React, { Component } from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport AttemptDataService from \"../../firebase/AttemptDataService\";\r\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Theory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.problemConfig = graphProblems.find(config => config.name == props.match.params.name)\r\n  }\r\n\r\n  async runGraphAnimationExample(network) {\r\n    for (const edgeId of this.problemConfig.theory.graphAnimationExample.animationPath) {\r\n        network.selectEdges([edgeId]);\r\n        await this.timer(1000);\r\n    }\r\n    await this.timer(2000);\r\n    this.runGraphAnimationExample(network)\r\n  }\r\n\r\n  timer = ms => new Promise(res => setTimeout(res, ms))\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h2>{this.problemConfig.name} Теория</h2>\r\n            <div>\r\n              {this.problemConfig.theory.paragraphs.map(paragraph => (\r\n                <p>\r\n                  {paragraph}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <Link to={`/problems/${this.problemConfig.name}/test`} className=\"btn-dark btn mt-3\">\r\n              Пройти тест\r\n            </Link>\r\n            <Graph\r\n              options={graphOptions}\r\n              graph={this.problemConfig.theory.graphAnimationExample.graph}\r\n              getNetwork={(network) => {\r\n                this.runGraphAnimationExample(network);\r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst graphOptions = {\r\n  layout: {\r\n    hierarchical: true\r\n  },\r\n  edges: {\r\n    color: \"#000000\",\r\n    physics: false,\r\n    width: 2\r\n  },\r\n  nodes: {\r\n    font: {size: 25}\r\n  },\r\n  interaction: {\r\n    dragNodes: false,\r\n    dragView: false,\r\n    zoomView: false\r\n  },\r\n  height: \"500px\"\r\n};","import React, { Component } from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport AttemptDataService from \"../../firebase/AttemptDataService\";\r\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\r\nimport firebase from \"firebase\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.problemConfig = graphProblems.find(config => config.name == props.match.params.name)\r\n    this.state = {\r\n      currentPath: [],\r\n      possibleCorrectPaths: this.problemConfig.graphQuestion.correctPaths,\r\n      alreadyFailed: false,\r\n      alreadyPassed: false,\r\n    };\r\n  }\r\n\r\n  submitAttempt(result) {\r\n    let data = {\r\n      userId: firebase.auth().currentUser.uid,\r\n      userEmail: firebase.auth().currentUser.email,\r\n      problem: this.problemConfig.name,\r\n      result: result,\r\n      date: new Date().toGMTString()\r\n    };\r\n\r\n    AttemptDataService.create(data)\r\n      .catch((e) => {\r\n        console.log(e);\r\n        toast.error(\"Не удается отправить ваши результаты на сервер: \" + e.message);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h2>{this.problemConfig.name} Тест</h2>\r\n            <div>Пожалуйста, выберите следующее ребро, начиная с вершины 1, которое должен выбрать алгоритм. Продолжайте выбирать ребра до тех пор, пока алгоритм не будет завершен.</div>\r\n            <Link to={`/problems/${this.problemConfig.name}/theory`} className=\"btn-dark btn mt-3\">\r\n              Обратно к теории\r\n            </Link>\r\n            <Graph\r\n              options={graphOptions}\r\n              graph={this.problemConfig.graphQuestion.graph}\r\n              events={{\r\n                selectEdge: (event) => {\r\n                  if (this.state.alreadyFailed) {\r\n                    toast.info(\"Тест уже провален.\")\r\n                    return;\r\n                  }\r\n                  if (this.state.alreadyPassed) {\r\n                    toast.info(\"Тест уже пройден.\")\r\n                    return;\r\n                  }\r\n                  if (event.nodes.length !== 0) {\r\n                    toast.info(\"Выбран узел. Пожалуйста, выберите вместо этого ребро.\")\r\n                    return;\r\n                  }\r\n                  if (event.edges.length > 1) {\r\n                    toast.error(\"Не ожидается, что будет выбрано более 1 узла.\")\r\n                    return;\r\n                  }\r\n                  const selectedEdge = event.edges[0];\r\n                  if (selectedEdge == this.state.currentPath[this.state.currentPath.length - 1]) {\r\n                    return;\r\n                  }\r\n                  this.setState({currentPath: [...this.state.currentPath, selectedEdge]});\r\n\r\n                  console.log(this.state);\r\n                  for (let i = 0; i < this.state.currentPath.length; i++) {\r\n\r\n                    this.setState({possibleCorrectPaths: this.state.possibleCorrectPaths\r\n                        .filter((possibleCorrectPath) => possibleCorrectPath[i] === this.state.currentPath[i])})\r\n                  }\r\n\r\n                  if (this.state.possibleCorrectPaths.length == 0) {\r\n                    toast.error(\"Тест не пройден.\", { autoClose: false })\r\n                    this.setState({alreadyFailed: true})\r\n                    this.submitAttempt(\"FAILURE\")\r\n                    return;\r\n                  }\r\n                  if (this.state.possibleCorrectPaths.some((possibleCorrectPath) => possibleCorrectPath.length === this.state.currentPath.length)) {\r\n                    toast.success(\"Тест сдан.\", { autoClose: false })\r\n                    this.setState({alreadyPassed: true})\r\n                    this.submitAttempt(\"SUCCESS\")\r\n                    return;\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst graphOptions = {\r\n  layout: {\r\n    hierarchical: true\r\n  },\r\n  edges: {\r\n    color: \"#000000\",\r\n    physics: false,\r\n    width: 2\r\n  },\r\n  nodes: {\r\n    font: {size: 25}\r\n  },\r\n  interaction: {\r\n    dragNodes: false,\r\n    dragView: false,\r\n    zoomView: false\r\n  },\r\n  height: \"800px\"\r\n};","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\r\nimport { graphProblems } from '../../config/graphProblems/graphProblems'\r\n\r\nexport default class ProblemsList extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container pt-5 justify-content-center w-50\">\r\n            <div className=\"row h5 text-center\">\r\n                Выберите алгоритм для изучения:\r\n            </div>\r\n            {graphProblems && graphProblems.map((problemConfig) =>\r\n                <div className=\"row pt-2\">\r\n                <Link to={`/problems/${problemConfig.name}/theory`} className=\"btn-dark btn\">\r\n                  {problemConfig.name}\r\n                </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n  }\r\n}","import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Switch, Route, Link, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd\r\n} from \"@react-firebase/auth\";\r\nimport { graphProblems } from './config/graphProblems/graphProblems';\r\nimport { firebaseConfig } from './config/firebase';\r\n\r\nimport Header from \"./components/header/Header\";\r\nimport SignUp from \"./components/signup/SignUp\";\r\nimport Login from \"./components/login/Login\";\r\nimport Theory from \"./components/theory/Theory\";\r\nimport Test from \"./components/test/Test\";\r\nimport ProblemsList from \"./components/problemsList/ProblemsList\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n    <FirebaseAuthProvider {...firebaseConfig} firebase={firebase}>\r\n      <div>\r\n        <FirebaseAuthConsumer>\r\n          {({ isSignedIn, user, providerId }) => {\r\n            return (\r\n            <div>\r\n              <Header/>\r\n              <div>\r\n                <div className=\"container mt-3\">\r\n                  <Switch>\r\n                    {isSignedIn && <>\r\n                    <Route exact path=\"/problems\" component={ProblemsList} />\r\n                    <Route exact path=\"/problems/:name/theory\" component={Theory} />\r\n                    <Route exact path=\"/problems/:name/test\" component={Test} />\r\n                    <Redirect exact from=\"/\" to=\"/problems\" />\r\n                    <Redirect exact from=\"/login\" to=\"/problems\" />\r\n                    </>}\r\n                    {!isSignedIn && <>\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/sign-up\" component={SignUp} />\r\n                    <Redirect exact from=\"/\" to=\"/login\" />\r\n                    <Redirect exact from=\"/problems\" to=\"/login\" />\r\n                    </>}\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n              <ToastContainer />\r\n            </div>\r\n            );\r\n          }}\r\n        </FirebaseAuthConsumer>\r\n      </div>\r\n    </FirebaseAuthProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nrender(<App />, document.getElementById(\"root\"));\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}